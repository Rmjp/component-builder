# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = ''
love = ''
god = 'b3kxMik6CiAgICBHUkFNTUFSID0gcicnJwogICAgICAgIHByb2dyYW06IHN0YXRlbWVudHMKICAgICAgICBzdGF0ZW1lbnRzOiBzdGF0ZW1lbnQqCiAgICAgICAgc3RhdGVtZW50OiBzdG10X2Fzc2lnbgogICAgICAgICAgICAgICAgIHwgc3RtdF9pZgogICAgICAgICAgICAgICAgIHwgc3RtdF9pZl9lbHNlCiAgICAgICAgICAgICAgICAgfCBzdG10X3doaWxlCiAgICAgICAgICAgICAgICAgfCBzdG10X3VudGlsCiAgICAgICAgICAgICAgICAgfCBzdG10X2Fzc2lnbl9kZXJlZgogICAgICAgIHN0bXRfYXNzaWduOiAibGV0IiBJRCAiPSIgZXhwciAiOyIKICAgICAgICBzdG10X2lmOiAiaWYiIGV4cHIgInsiIHN0YXRlbWVudHMgIn0iCiAgICAgICAgc3RtdF9pZl9lbHNlOiAiaWYiIGV4cHIgInsiIHN0YXRlbWVudHMgIn0iICJlbHNlIiAieyIgc3RhdGVtZW50cyAifSIKICAgICAgICBzdG10X3doaWxlOiAid2hpbGUiIGV4cHIgInsiIHN0YXRlbWVudHMgIn0iCiAgICAgICAgc3RtdF91bnRpbDogInVudGlsIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IgogICAgICAgIHN0bXRfYXNzaWduX2RlcmVmOiAibGV0IiAiKiIgZXhwciAiPSIgZXhwciAiOyIKICAgICAgICBleHByOiBleHByX2NvbnN0CiAgICAgICAgICAgIHwgZXhwcl9pZAogICAgICAgICAgICB8IGV4cHJfYWRkCiAgICAgICAgICAgIHwgZXhwcl9zdWIKICAgICAgICAgICAgfCBleHByX25lZ2F0ZQogICAgICAgICAgICB8IGV4cHJfcGFyZW4KICAgICAgICAgICAgfCBleHByX2NvbXBhcmUKICAgICAgICAgICAgfCBleHByX2FuZAogICAgICAgICAgICB8IGV4cHJfb3IKICAgICAgICAgICAgfCBleHByX25vdAogICAgICAgICAgICB8IGV4cHJfcmVmCiAgICAgICAgICAgIHwgZXhwcl9kZXJlZgogICAgICAgIGV4cHJfYWRkOiBleHByICIrIiBleHByCiAgICAgICAgZXhwcl9zdWI6IGV4cHIgIi0iIGV4cHIKICAgICAgICBleHByX25lZ2F0ZTogIi0iIGV4cHIKICAgICAgICBleHByX3BhcmVuOiAiKCIgZXhwciAiKSIKICAgICAgICBleHByX2NvbXBhcmU6IGV4cHIgQ09NUEFSRV9PUCBleHByCiAgICAgICAgZXhwcl9hbmQ6IGV4cHIgIiYmIiBleHByCiAgICAgICAgZXhwcl9vcjogZXhwciAifHwiIGV4cHIKICAgICAgICBleHByX25vdDogIiEiIGV4cHIKICAgICAgICBleHByX2NvbnN0OiBOVU1CRVIgfCBCSU5fTlVNQkVSIHwgSEVYX05VTUJFUiB8IENIQVJBQ1RFUgogICAgICAgIGV4cHJfaWQ6IElECiAgICAgICAgZXhwcl9yZWY6ICImIiBJRAogICAgICAgIGV4cHJfZGVyZWY6ICIqIiBleHByCgogICAgICAgIENPTVBBUkVfT1A6ICI+PSIgfCAiPD0iIHwgIj09IiB8ICI+IiB8ICI8IiB8ICIhPSIKICAgICAgICBJRDogL1tfQS1aYS16XVtfMC05QS1aYS16XSovCiAgICAgICAgTlVNQkVSOiAvLT9bMC05XSsvCiAgICAgICAgQklOX05VTUJFUjogLzBiWzAtMV0rLwogICAgICAgIEhFWF9OVU1CRVI6IC8weFswLTlBLUZhLWZdKy8KICAgICAgICBDSEFSQUNURVI6IC8nW14nXScvCiAgICAgICAgV1M6IC9bIFx0XGZcclxuXSsvCiAgICAgICAgJWlnbm9yZSBXUwogICAgICAgIENPTU1FTlQ6ICIvLyIgL1teXHJcbl0qW1xyXG5dPy8KICAgICAgICAlaWdub3JlIENPTU1FTlQKICAgICcnJwoKICAgICMgZGVmaW5lIHlvdXIgY29kZS1nZW5lcmF0aW9uIG1ldGhvZHMgaGVyZQoKICAgIGRlZiBleHByX3JlZihzZWxmLCB0cmVlKToKICAgICAgICBpZCwgPSB0cmVlLmNoaWxkcmVuCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgIEAudmFyLntpZH0KICAgICAgICAgICAgRD1BCiAgICAgICAgICAgIEBUSElTCiAgICAgICAgICAgIE09RAogICAgICAgICcnJykKCiAgICBkZWYgZXhwcl9kZXJlZihzZWxmLCB0cmVlKToKICAgICAgICBleHByLCA9IHRyZWUuY2hpbGRyZW4KICAgICAgICBzZWxmLnZpc2l0KGV4cHIpCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgIEBUSElTCiAgICAgICAgICAgIEE9TQogICAgICAgICAgICBEPU0KICAgICAgICAgICAgQFRISVMKICAgICAgICAgICAgTT1ECiAgICAgICAgJycnKQoKICAgIGRlZiBzdG10X2Fzc2lnbl9kZXJlZihzZWxmLCB0cmVlKToKICAgICAgICBsZXhwcixyZXhwciA9IHRyZWUuY2hpbGRyZW4KICAgICAgICBzZWxmLnZpc2l0KGxleHByKQogICAgICAgIHNlbGYuZ2VuX3B1c2goJ1RISVMnKQogICAgICAgIHNlbGYudmlzaXQocmV4cHIpCiAgICAgICAgc2VsZi5nZW5fcG9wKCdUSEFUJykKCiAgICAgICAgIyBub3cgVEhBVCA9IGxleHByLCBUSElTID0gcmV4cHIKICAgICAgICBzZWxmLl9hc20uYXBwZW5kKGYnJycKICAgICAgICAgICAgQFRISVMKICAgICAgICAgICAgRD1NCiAgICAgICAgICAgIEBUSEFUCiAgICAgICAgICAgIEE9TQogICAgICAgICAgICBNPUQKICAgICAgICAnJycpCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKY2xhc3MgVGVzdEpveTEzKFRlc3RKb3kxMik6CgogICAgSk9ZX0NPTVBJTEVSID0gSm95MTMKCiAgICBkZWYgdGVzdF9leHByX3JlZihzZWxmKToKICAgICAgICBzZWxmLmNvbXBpbGVfYW5kX3J1bignJycKICAgICAgICAgICAgbGV0IGEgPSA4OwogICAgICAgICAgICBsZXQgYiA9ICZhOwogICAgICAgICcnJykKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVsxNl0sIDgpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bMTddLCAxNikKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVswXSwgMHgzZmZmKQoKICAgIGRlZiB0ZXN0X2V4cHJfZGVyZWYoc2VsZik6CiAgICAgICAgc2VsZi5jb21waWxlX2FuZF9ydW4oJycnCiAgICAgICAgICAgIGxldCBhID0gODsKICAgICAgICAgICAgbGV0IGIgPSAmYTsKICAgICAgICAgICAgbGV0IGEgPSAyOTsKICAgICAgICAgICAgbGV0IGMgPSAoKmIpICsgMTA7CiAgICAgICAgJycnKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtWzE2XSwgMjkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bMTddLCAxNikKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVsxOF0sIDI5KzEwKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtWzBdLCAweDNmZmYpCgogICAgZGVmIHRlc3Rfc3RtdF9hc3NpZ25fZGVyZWYoc2VsZik6CiAgICAgICAgc2VsZi5jb21waWxlX2FuZF9ydW4oJycnCiAgICAgICAgICAgIGxldCBhID0gODsKICAgICAgICAgICAgbGV0ICphID0gMTIzNDsKICAgICAgICAgICAgbGV0ICooYSsxKSA9IDQzMjE7CiAgICAgICAgJycnKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtWzhdLCAxMjM0KQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtWzldLCA0MzIxKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtWzBdLCAweDNmZmYpCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKY2xhc3MgSm95MjAoSm95MTMpOgogICAgR1JBTU1BUiA9IHInJycKICAgICAgICBwcm9ncmFtOiBzdGF0ZW1lbnRzCiAgICAgICAgc3RhdGVtZW50czogc3RhdGVtZW50KgogICAgICAgIHN0YXRlbWVudDogc3RtdF9hc3NpZ24KICAgICAgICAgICAgICAgICB8IHN0bXRfaWYKICAgICAgICAgICAgICAgICB8IHN0bXRfaWZfZWxzZQogICAgICAgICAgICAgICAgIHwgc3RtdF93aGlsZQogICAgICAgICAgICAgICAgIHwgc3RtdF91bnRpbAogICAgICAgICAgICAgICAgIHwgc3RtdF9hc3NpZ25fZGVyZWYKICAgICAgICBzdG10X2Fzc2lnbjogImxldCIgSUQgIj0iIGV4cHIgIjsiCiAgICAgICAgc3RtdF9pZjogImlmIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IgogICAgICAgIHN0bXRfaWZfZWxzZTogImlmIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IiAiZWxzZSIgInsiIHN0YXRlbWVudHMgIn0iCiAgICAgICAgc3RtdF93aGlsZTogIndoaWxlIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IgogICAgICAgIHN0bXRfdW50aWw6ICJ1bnRpbCIgZXhwciAieyIgc3RhdGVtZW50cyAifSIKICAgICAgICBzdG10X2Fzc2lnbl9kZXJlZjogImxldCIgIioiIGV4cHIgIj0iIGV4cHIgIjsiCiAgICAgICAgZXhwcjogZXhwcl9jb25zdAogICAgICAgICAgICB8IGV4cHJfaWQKICAgICAgICAgICAgfCBleHByX2FkZAogICAgICAgICAgICB8IGV4cHJfc3ViCiAgICAgICAgICAgIHwgZXhwcl9uZWdhdGUKICAgICAgICAgICAgfCBleHByX3BhcmVuCiAgICAgICAgICAgIHwgZXhwcl9jb21wYXJlCiAgICAgICAgICAgIHwgZXhwcl9hbmQKICAgICAgICAgICAgfCBleHByX29yCiAgICAgICAgICAgIHwgZXhwcl9ub3QKICAgICAgICAgICAgfCBleHByX3JlZgogICAgICAgICAgICB8IGV4cHJfZGVyZWYKICAgICAgICAgICAgfCBleHByX3N0cmluZwogICAgICAgICAgICB8IGV4cHJfYXJyYXkKICAgICAgICBleHByX2FkZDogZXhwciAiKyIgZXhwcgogICAgICAgIGV4cHJfc3ViOiBleHByICItIiBleHByCiAgICAgICAgZXhwcl9uZWdhdGU6ICItIiBleHByCiAgICAgICAgZXhwcl9wYXJlbjogIigiIGV4cHIgIikiCiAgICAgICAgZXhwcl9jb21wYXJlOiBleHByIENPTVBBUkVfT1AgZXhwcgogICAgICAgIGV4cHJfYW5kOiBleHByICImJiIgZXhwcgogICAgICAgIGV4cHJfb3I6IGV4cHIgInx8IiBleHByCiAgICAgICAgZXhwcl9ub3Q6ICIhIiBleHByCiAgICAgICAgZXhwcl9jb25zdDogTlVNQkVSIHwgQklOX05VTUJFUiB8IEhFWF9OVU1CRVIgfCBDSEFSQUNURVIKICAgICAgICBleHByX2lkOiBJRAogICAgICAgIGV4cHJfcmVmOiAiJiIgSUQKICAgICAgICBleHByX2RlcmVmOiAiKiIgZXhwcgogICAgICAgIGV4cHJfc3RyaW5nOiBTVFJJTkcKICAgICAgICBleHByX2FycmF5OiAiWyIgZXhwciAoIiwiIGV4cHIpKiAiXSIKCiAgICAgICAgQ09NUEFSRV9PUDogIj49IiB8ICI8PSIgfCAiPT0iIHwgIj4iIHwgIjwiIHwgIiE9IgogICAgICAgIElEOiAvW19BLVphLXpdW18wLTlBLVphLXpdKi8KICAgICAgICBOVU1CRVI6IC8tP1swLTldKy8KICAgICAgICBCSU5fTlVNQkVSOiAvMGJbMC0xXSsvCiAgICAgICAgSEVYX05VTUJFUjogLzB4WzAtOUEtRmEtZl0rLwogICAgICAgIENIQVJBQ1RFUjogLydbXiddJy8KICAgICAgICBTVFJJTkc6IC8iW14iXSoiLwogICAgICAgIFdTOiAvWyBcdFxmXHJcbl0rLwogICAgICAgICVpZ25vcmUgV1MKICAgICAgICBDT01NRU5UOiAiLy8iIC9bXlxyXG5dKltcclxuXT8vCiAgICAgICAgJWlnbm9yZSBDT01NRU5UCiAgICAgICAgJycnCgogICAgIyBkZWZpbmUgeW91ciBjb2RlLWdlbmVyYXRpb24gbWV0aG9kcywgYXMgd2VsbCBhcyBfX2luaXRfXygpIGhlcmUKCiAgICBkZWYgX19pbml0X18oc2VsZiwgKiprd2FyZ3MpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oKiprd2FyZ3MpCiAgICAgICAgc2VsZi5hcnJheV9jb3VudCA9IDAKCiAgICBkZWYgZXhwcl9zdHJpbmcoc2VsZiwgdHJlZSk6CiAgICAgICAgc3RyaW5nLCA9IHRyZWUuY2hpbGRyZW4KICAgICAgICB2YWxzID0gW29yZCh4KSBmb3IgeCBpbiBzdHJpbmdbMTotMV1dICsgWzBdCiAgICAgICAgc2VsZi5hcnJheV9jb3VudCArPSAxCiAgICAgICAgYXJyYXlfaWQgPSBzZWxmLmFycmF5X2NvdW50CiAgICAgICAgZm9yIGksdiBpbiBlbnVtZXJhdGUodmFscyk6CiAgICAgICAgICAgIHNlbGYuZ2VuX2xvYWRfY29uc3QoZicuYXJyYXkue2FycmF5X2lkfS57aX0nLCB2KQogICAgICAgICMgcG9pbnQgVEhJUyB0byB0aGUgZmlyc3QgbWVtYmVyCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgIC8vIFtUSElTXSA8LSAuYXJyYXkue2FycmF5X2lkfQogICAgICAgICAgICBALmFycmF5LnthcnJheV9pZH0uMAogICAgICAgICAgICBEPUEKICAgICAgICAgICAgQFRISVMKICAgICAgICAgICAgTT1ECiAgICAgICAgJycnKQoKICAgIGRlZiBleHByX2FycmF5KHNlbGYsIHRyZWUpOgogICAgICAgIHNlbGYuYXJyYXlfY291bnQgKz0gMQogICAgICAgIGFycmF5X2lkID0gc2VsZi5hcnJheV9jb3VudAogICAgICAgIGZvciBpIGluIHJhbmdlKGxlbih0cmVlLmNoaWxkcmVuKSk6CiAgICAgICAgICAgIHNlbGYuX2FzbS5hcHBlbmQoZidALmFycmF5LnthcnJheV9pZH0ue2l9JykKICAgICAgICBmb3IgaSxleHByIGluIGVudW1lcmF0ZSh0cmVlLmNoaWxkcmVuKToKICAgICAgICAgICAgc2VsZi52aXNpdChleHByKQogICAgICAgICAgICBzZWxmLmdlbl9tb3ZlKGYnLmFycmF5LnthcnJheV9pZH0ue2l9JywgJ1RISVMnKQogICAgICAgICMgcG9pbnQgVEhJUyB0byB0aGUgZmlyc3QgbWVtYmVyCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgIC8vIFtUSElTXSA8LSAuYXJyYXkue2FycmF5X2lkfQogICAgICAgICAgICBALmFycmF5LnthcnJheV9pZH0uMAogICAgICAgICAgICBEPUEKICAgICAgICAgICAgQFRISVMKICAgICAgICAgICAgTT1ECiAgICAgICAgJycnKQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCmNsYXNzIFRlc3RKb3kyMChUZXN0Sm95MTMpOgoKICAgIEpPWV9DT01QSUxFUiA9IEpveTIwCgogICAgZGVmIHRlc3Rfc3RyaW5nKHNlbGYpOgogICAgICAgIHNlbGYuY29tcGlsZV9hbmRfcnVuKCcnJwogICAgICAgICAgICBsZXQgczEgPSAiSGVsbG8iOwogICAgICAgICAgICBsZXQgKjEwID0gczE7CiAgICAgICAgJycnKQogICAgICAgIGFkZHIgPSBzZWxmLmNwdS5yYW1bMTBdCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkciswXSwgb3JkKCdIJykpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkcisxXSwgb3JkKCdlJykpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkcisyXSwgb3JkKCdsJykpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkciszXSwgb3JkKCdsJykpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkcis0XSwgb3JkKCdvJykpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bYWRkcis1XSwgMCkKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVswXSwgMHgzZmZmKQoKICAgIGRlZiB0ZXN0X2FycmF5KHNlbGYpOgogICAgICAgIHNlbGYuY29tcGlsZV9hbmRfcnVuKCcnJwogICAgICAgICAgICBsZXQgYSA9IDIwOwogICAgICAgICAgICBsZXQgYXJyID0gWzEsIDMrMiwgYSs1LCAoOC0zKSthLCA5XTsKICAgICAgICAgICAgbGV0ICoxMCA9IGFycjsKICAgICAgICAnJycpCiAgICAgICAgYWRkciA9IHNlbGYuY3B1LnJhbVsxMF0KICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVthZGRyKzBdLCAxKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtW2FkZHIrMV0sIDMrMikKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHNlbGYuY3B1LnJhbVthZGRyKzJdLCAyMCs1KQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtW2FkZHIrM10sICg4LTMpKzIwKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwoc2VsZi5jcHUucmFtW2FkZHIrNF0sIDkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChzZWxmLmNwdS5yYW1bMF0sIDB4M2ZmZikKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI2AKY2xhc3MgSm95MjEoSm95MjApOgogICAgZGVmIF9faW5pdF9fKHNlbGYsICoqa3dhcmdzKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKCoqa3dhcmdzKQogICAgICAgIHNlbGYuX3Njb3BlID0gTm9uZQogICAgICAgIHNlbGYuX2dsb2JhbHMgPSBzZXQoKQoKICAgIGRlZiBnZXRfdmFyX2xhYmVsKHNlbGYsIHZhciwgZnVuYz1Ob25lKToKICAgICAgICBpZiBmdW5jIGlzIG5vdCBOb25lOgogICAgICAgICAgICByZXR1cm4gZicubG9jYWwue2Z1bmN9Lnt2YXJ9JwogICAgICAgIGVsaWYgc2VsZi5fc2NvcGUgPT0gTm9uZSBvciB2YXIgaW4gc2VsZi5fZ2xvYmFsczoKICAgICAgICAgICAgcmV0dXJuIGYnLmdsb2JhbC57dmFyfScKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gZicubG9jYWwue3NlbGYuX3Njb3BlfS57dmFyfScKCiAgICBkZWYgc3RtdF9hc3NpZ24oc2VsZiwgdHJlZSk6CiAgICAgICAgaWQsIGV4cHIgPSB0cmVlLmNoaWxkcmVuCiAgICAgICAgc2VsZi52aXNpdChleHByKQogICAgICAgIHNlbGYuZ2VuX21vdmUoc2VsZi5nZXRfdmFyX2xhYmVsKGlkKSwgJ1RISVMnKQoKICAgIGRlZiBleHByX2lkKHNlbGYsIHRyZWUpOgogICAgICAgIGlkLCA9IHRyZWUuY2hpbGRyZW4KICAgICAgICBzZWxmLmdlbl9tb3ZlKCdUSElTJywgc2VsZi5nZXRfdmFyX2xhYmVsKGlkKSkKCiAgICAjIOC5geC4geC5ieC5hOC4guC5gOC4oeC4l+C5h+C4reC4lOC4l+C4teC5iOC4quC4o+C5ieC4suC4h+C5guC4hOC5ieC4lOC4quC4s+C4q+C4o+C4seC4muC4leC4seC4p+C4lOC4s+C5gOC4meC4tOC4meC4geC4suC4oyAmCiAgICAjICoqKiDguYPguKrguYjguYLguITguYnguJTguILguK3guIfguJXguJnguYDguK3guIcgKioqCiAgICBkZWYgZXhwcl9yZWYoc2VsZiwgdHJlZSk6CiAgICAgICAgW2lkXSA9IHRyZWUuY2hpbGRyZW4KICAgICAgICBzZWxmLl9hc20uYXBwZW5kKGYnJycKICAgICAgICAgICAgQHtzZWxmLmdldF92YXJfbGFiZWwoaWQpfQogICAgICAgICAgICBEPUEKICAgICAgICAgICAgQFRISVMKICAgICAgICAgICAgTT1ECiAgICAgICAgJycnKQoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjYApjbGFzcyBUZXN0Sm95MjEoVGVzdEpveTIwKToKICAgIEpPWV9DT01QSUxFUiA9IEpveTIxCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNgCmNsYXNzIEpveTIyKEpveTIxKToKCiAgICAjIOC4p+C4suC4h+C5geC4geC4o+C4oeC4oeC4suC4o+C5jOC4iOC4suC4gSBKb3kgMi4wIOC4l+C4teC5iOC4oeC4teC4geC4suC4o+C4m+C4o+C4seC4muC5gOC4m+C4peC4teC5iOC4ouC4meC5g+C4q+C5ieC4o+C4reC4h+C4o+C4seC4muC4n+C4seC4h+C4geC5jOC4iuC4seC4meC4leC4suC4oeC4l+C4teC5iOC4o+C4sOC4muC4uOC4guC5ieC4suC4h+C4leC5ieC4meC5gOC4o+C4teC4ouC4muC4o+C5ieC4reC4ouC5geC4peC5ieC4pwogICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgR1JBTU1BUiA9IHInJycKICAgICAgICBwcm9ncmFtOiAoZnVuY2RlZiB8IHN0YXRlbWVudCkqCiAgICAgICAgZnVuY2RlZjogImRlZiIgSUQgIigiIHBhcmFtcyAiKSIgInsiIGdsb2JhbHMgc3RhdGVtZW50cyAifSIKICAgICAgICBwYXJhbXM6IElEICgiLCIgSUQpKgogICAgICAgICAgICB8CiAgICAgICAgZ2xvYmFsczogKCJnbG9iYWwiIElEICI7IikqCiAgICAgICAgc3RhdGVtZW50czogc3RhdGVtZW50KgogICAgICAgIHN0YXRlbWVudDogc3RtdF9hc3NpZ24KICAgICAgICAgICAgICAgICB8IHN0bXRfaWYKICAgICAgICAgICAgICAgICB8IHN0bXRfaWZfZWxzZQogICAgICAgICAgICAgICAgIHwgc3RtdF93aGlsZQogICAgICAgICAgICAgICAgIHwgc3RtdF91bnRpbAogICAgICAgICAgICAgICAgIHwgc3RtdF9hc3NpZ25fZGVyZWYKICAgICAgICAgICAgICAgICB8IHN0bXRfY2FsbAogICAgICAgICAgICAgICAgIHwgc3RtdF9yZXR1cm4KICAgICAgICBzdG10X2Fzc2lnbjogImxldCIgSUQgIj0iIGV4cHIgIjsiCiAgICAgICAgc3RtdF9pZjogImlmIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IgogICAgICAgIHN0bXRfaWZfZWxzZTogImlmIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IiAiZWxzZSIgInsiIHN0YXRlbWVudHMgIn0iCiAgICAgICAgc3RtdF93aGlsZTogIndoaWxlIiBleHByICJ7IiBzdGF0ZW1lbnRzICJ9IgogICAgICAgIHN0bXRfdW50aWw6ICJ1bnRpbCIgZXhwciAieyIgc3RhdGVtZW50cyAifSIKICAgICAgICBzdG10X2Fzc2lnbl9kZXJlZjogImxldCIgIioiIGV4cHIgIj0iIGV4cHIgIjsiCiAgICAgICAgc3RtdF9jYWxsOiBleHByX2NhbGwgIjsiCiAgICAgICAgc3RtdF9yZXR1cm46ICJyZXR1cm4iIGV4cHIgIjsiCiAgICAgICAgZXhwcjogZXhwcl9jb25zdAogICAgICAgICAgICB8IGV4cHJfaWQKICAgICAgICAgICAgfCBleHByX2FkZAogICAgICAgICAgICB8IGV4cHJfc3ViCiAgICAgICAgICAgIHwgZXhwcl9uZWdhdGUKICAgICAgICAgICAgfCBleHByX3BhcmVuCiAgICAgICAgICAgIHwgZXhwcl9jb21wYXJlCiAgICAgICAgICAgIHwgZXhwcl9hbmQKICAgICAgICAgICAgfCBleHByX29yCiAgICAgICAgICAgIHwgZXhwcl9ub3QKICAgICAgICAgICAgfCBleHByX3JlZgogICAgICAgICAgICB8IGV4cHJfZGVyZWYKICAgICAgICAgICAgfCBleHByX3N0cmluZwogICAgICAgICAgICB8IGV4cHJfYXJyYXkKICAgICAgICAgICAgfCBleHByX2NhbGwKICAgICAgICBleHByX2FkZDogZXhwciAiKyIgZXhwcgogICAgICAgIGV4cHJfc3ViOiBleHByICItIiBleHByCiAgICAgICAgZXhwcl9uZWdhdGU6ICItIiBleHByCiAgICAgICAgZXhwcl9wYXJlbjogIigiIGV4cHIgIikiCiAgICAgICAgZXhwcl9jb21wYXJlOiBleHByIENPTVBBUkVfT1AgZXhwcgogICAgICAgIGV4cHJfYW5kOiBleHByICImJiIgZXhwcgogICAgICAgIGV4cHJfb3I6IGV4cHIgInx8IiBleHByCiAgICAgICAgZXhwcl9ub3Q6ICIhIiBleHByCiAgICAgICAgZXhwcl9jb25zdDogTlVNQkVSIHwgQklOX05VTUJFUiB8IEhFWF9OVU1CRVIgfCBDSEFSQUNURVIKICAgICAgICBleHByX2lkOiBJRAogICAgICAgIGV4cHJfcmVmOiAiJiIgSUQKICAgICAgICBleHByX2RlcmVmOiAiKiIgZXhwcgogICAgICAgIGV4cHJfc3RyaW5nOiBTVFJJTkcKICAgICAgICBleHByX2FycmF5OiAiWyIgZXhwciAoIiwiIGV4cHIpKiAiXSIKICAgICAgICBleHByX2NhbGw6IElEICIoIiBhcmdzICIpIgogICAgICAgIGFyZ3M6IGV4cHIgKCIsIiBleHByKSoKICAgICAgICAgICAgfAoKICAgICAgICBDT01QQVJFX09QOiAiPj0iIHwgIjw9IiB8ICI9PSIgfCAiPiIgfCAiPCIgfCAiIT0iCiAgICAgICAgSUQ6IC9bX0EtWmEtel1bXzAtOUEtWmEtel0qLwogICAgICAgIE5VTUJFUjogLy0/WzAtOV0rLwogICAgICAgIEJJTl9OVU1CRVI6IC8wYlswLTFdKy8KICAgICAgICBIRVhfTlVNQkVSOiAvMHhbMC05QS1GYS1mXSsvCiAgICAgICAgQ0hBUkFDVEVSOiAvJ1teJ10nLwogICAgICAgIFNUUklORzogLyJbXiJdKiIvCiAgICAgICAgV1M6IC9bIFx0XGZcclxuXSsvCiAgICAgICAgJWlnbm9yZSBXUwogICAgICAgIENPTU1FTlQ6ICIvLyIgL1teXHJcbl0qW1xyXG5dPy8KICAgICAgICAlaWdub3JlIENPTU1FTlQKICAgICcnJwoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCAqKmt3YXJncyk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygqKmt3YXJncykKICAgICAgICAjIOC4meC4tOC4ouC4suC4oeC4leC4seC4p+C5geC4m+C4o+C4quC4oeC4suC4iuC4tOC4geC5gOC4nuC4tOC5iOC4oeC5gOC4leC4tOC4oeC4leC4suC4oeC4leC5ieC4reC4h+C4geC4suC4oyDguYDguIrguYjguJkgZGljdCDguKrguLPguKvguKPguLHguJrguYDguIHguYfguJrguKPguLLguKLguIHguLLguKPguJ/guLHguIfguIHguYzguIrguLHguJnguJfguLXguYjguJnguLTguKLguLLguKHguYTguJvguYHguKXguYnguKcKICAgICAgICAjIOC4nuC4o+C5ieC4reC4oeC4guC5ieC4reC4oeC4ueC4peC4iOC4s+C4meC4p+C4meC4nuC4suC4o+C4suC4oeC4tOC5gOC4leC4reC4o+C5jAogICAgICAgICMgKioqIOC5g+C4quC5iOC5guC4hOC5ieC4lOC4guC4reC4h+C4leC4meC5gOC4reC4hyAqKioKICAgICAgICBzZWxmLl9mdW5jcyA9IHt9CgoKICAgIGRlZiBleHByX2NhbGwoc2VsZiwgdHJlZSk6CiAgICAgICAgW2Z1bmNuYW1lLCBhcmdzXSA9IHRyZWUuY2hpbGRyZW4KCiAgICAgICAgIyDguJXguKPguKfguIjguKrguK3guJrguKfguYjguLLguJ/guLHguIfguIHguYzguIrguLHguJnguJfguLXguYjguYDguKPguLXguKLguIHguKHguLXguIHguLLguKPguJnguLTguKLguLLguKHguKvguKPguLfguK3guKLguLHguIcKICAgICAgICAjIOC4q+C4suC4geC5hOC4oeC5iOC4oeC4teC5g+C4q+C5ieC4quC4seC5iOC4hyByYWlzZSBKb3lVbmRlZmluZWRGdW5jdGlvbkV4Y2VwdGlvbigpCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIGlmIGZ1bmNuYW1lLnZhbHVlIG5vdCBpbiBzZWxmLl9mdW5jczoKICAgICAgICAgICAgcmFpc2UgSm95VW5kZWZpbmVkRnVuY3Rpb25FeGNlcHRpb24oKQoKICAgICAgICAjIOC4leC4o+C4p+C4iOC4quC4reC4muC4iOC4s+C4meC4p+C4meC4reC4suC4o+C5jOC4geC4tOC4p+C5gOC4oeC4meC4leC5jCDguIvguLbguYjguIfguJXguYnguK3guIfguYDguJfguYjguLLguIHguLHguJrguIjguLPguJnguKfguJnguJ7guLLguKPguLLguKHguLTguYDguJXguK3guKPguYwKICAgICAgICAjIOC4q+C4suC4geC5hOC4oeC5iOC5gOC4l+C5iOC4suC5g+C4q+C5ieC4quC4seC5iOC4hyByYWlzZSBKb3lQYXJhbU1pc21hdGNoRXhjZXB0aW9uKCkKICAgICAgICAjICoqKiDguYPguKrguYjguYLguITguYnguJTguILguK3guIfguJXguJnguYDguK3guIcgKioqCiAgICAgICAgZnVuY19pbmZvID0gc2VsZi5fZnVuY3NbZnVuY25hbWUudmFsdWVdCiAgICAgICAgaWYgbGVuKGFyZ3MuY2hpbGRyZW4pICE9IGxlbihmdW5jX2luZm9bJ3BhcmFtcyddKToKICAgICAgICAgICAgcmFpc2UgSm95UGFyYW1NaXNtYXRjaEV4Y2VwdGlvbigpCgogICAgICAgIHNlbGYuX2FzbS5hcHBlbmQoZicnJwogICAgICAgICAgICAvLyAjIyMgY2FsbCB7ZnVuY25hbWV9ICMjIwogICAgICAgICcnJykKCiAgICAgICAgIyDguKrguKPguYnguLLguIfguYLguITguYnguJTguITguLPguJnguKfguJPguK3guLLguKPguYzguIHguLTguKfguYDguKHguJnguJXguYzguYHguJXguYjguKXguLDguITguYjguLIg4LmB4Lil4LmJ4Lin4Lia4Lix4LiZ4LiX4Li24LiB4LmE4Lin4LmJ4LmD4LiZ4Lie4Liy4Lij4Liy4Lih4Li04LmA4LiV4Lit4Lij4LmM4LmB4LiV4LmI4Lil4Liw4LiV4Lix4Lin4LiC4Lit4LiH4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4Lic4Li54LmJ4LiW4Li54LiB4LmA4Lij4Li14Lii4LiBCiAgICAgICAgIyAo4LmD4LiK4LmJIGdldF92YXJfbGFiZWwoKSDguYHguJrguJrguKPguLDguJrguLjguIrguLfguYjguK3guJ/guLHguIfguIHguYzguIrguLHguJnguYTguJTguYkpCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIGZvciBleHByIGluIGFyZ3MuY2hpbGRyZW46CiAgICAgICAgICAgIHNlbGYudmlzaXQoZXhwcikKICAgICAgICAgICAgc2VsZi5nZW5fcHVzaCgnVEhJUycpCgogICAgICAgIGZvciBwYXJhbSBpbiBmdW5jX2luZm9bJ3BhcmFtcyddWzo6LTFdOgogICAgICAgICAgICBzZWxmLmdlbl9wb3AoJ1RISVMnKQogICAgICAgICAgICBzZWxmLmdlbl9tb3ZlKHNlbGYuZ2V0X3Zhcl9sYWJlbChwYXJhbSwgZnVuYz1mdW5jbmFtZSksICdUSElTJykKICAgICAgICAjIGZvciBleHByLCBwYXJhbSBpbiB6aXAoYXJncy5jaGlsZHJlbiwgZnVuY19pbmZvWydwYXJhbXMnXSk6CiAgICAgICAgIyAgICAgc2VsZi52aXNpdChleHByKQogICAgICAgICMgICAgIHNlbGYuZ2VuX21vdmUoc2VsZi5nZXRfdmFyX2xhYmVsKHBhcmFtLCBmdW5jPWZ1bmNuYW1lKSwgJ1RISVMnKQoKICAgICAgICAjIHB1c2gg4LiE4LmI4Liy4Lib4Lix4LiI4LiI4Li44Lia4Lix4LiZ4LiC4Lit4LiHIExDTCDguKXguIfguKrguYHguJXguYfguIEKICAgICAgICAjICoqKiDguYPguKrguYjguYLguITguYnguJTguILguK3guIfguJXguJnguYDguK3guIcgKioqCiAgICAgICAgc2VsZi5nZW5fcHVzaCgnTENMJykKCiAgICAgICAgIyDguJrguLHguJnguJfguLbguIHguITguYjguLIgcmV0dXJuIGFkZHJlc3Mg4LmE4Lin4LmJ4LmD4LiZIExDTCDguIvguLbguYjguIfguYTguJTguYnguKHguLLguIjguLLguIHguKXguLLguYDguJrguKXguJfguLXguYjguIHguLPguKXguLHguIfguIjguLAKICAgICAgICAjIOC4p+C4suC4h+C5hOC4p+C5ieC4leC5iOC4reC4iOC4suC4geC5guC4hOC5ieC4lOC4geC4o+C4sOC5guC4lOC4lOC5hOC4m+C4ouC4seC4h+C4n+C4seC4h+C4geC5jOC4iuC4seC4mQogICAgICAgICMgKioqIOC5g+C4quC5iOC5guC4hOC5ieC4lOC4guC4reC4h+C4leC4meC5gOC4reC4hyAqKioKICAgICAgICBsYWJlbCA9IHNlbGYuZ2VuX2xhYmVsX25vKCkKICAgICAgICBzZWxmLl9hc20uYXBwZW5kKGYnJycKICAgICAgICAgICAgQC5yZXR1cm4ue2xhYmVsfQogICAgICAgICAgICBEPUEKICAgICAgICAgICAgQExDTAogICAgICAgICAgICBNPUQKICAgICAgICAnJycpCgogICAgICAgICMg4Liq4Lij4LmJ4Liy4LiH4LmC4LiE4LmJ4LiU4LiB4Lij4Liw4LmC4LiU4LiU4LmE4Lib4Lii4Lix4LiH4LiI4Li44LiU4LmA4Lij4Li04LmI4Lih4LiV4LmJ4LiZ4LiC4Lit4LiH4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4Lic4Li54LmJ4LiW4Li54LiB4LmA4Lij4Li14Lii4LiBCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIHNlbGYuX2FzbS5hcHBlbmQoZicnJwogICAgICAgICAgICBALmJlZ2luZnVuYy57ZnVuY25hbWV9CiAgICAgICAgICAgIDA7Sk1QCiAgICAgICAgJycnKQoKICAgICAgICAjIOC4p+C4suC4h+C4peC4suC5gOC4muC4peC4l+C4teC5iOC5g+C4iuC5ieC5gOC4m+C5h+C4mSByZXR1cm4gYWRkcmVzcyAo4Lij4Liw4Lin4Lix4LiH4Lit4Lii4LmI4Liy4LmD4Lir4LmJ4LiK4Li34LmI4Lit4Lil4Liy4LmA4Lia4Lil4LiL4LmJ4LizKQogICAgICAgICMgKioqIOC5g+C4quC5iOC5guC4hOC5ieC4lOC4guC4reC4h+C4leC4meC5gOC4reC4hyAqKioKICAgICAgICBzZWxmLl9hc20uYXBwZW5kKGYnJycKICAgICAgICAgICAgKC5yZXR1cm4ue2xhYmVsfSkKICAgICAgICAnJycpCgogICAgICAgICMgcG9wIOC4hOC5iOC4siBMQ0wg4LmA4LiU4Li04Lih4LiX4Li14LmI4LmA4LiE4Lii4Lia4Lix4LiZ4LiX4Li24LiB4LmE4Lin4LmJ4Lit4Lit4LiB4Lih4Liy4LiI4Liy4LiB4Liq4LmB4LiV4LmH4LiBCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIHNlbGYuZ2VuX3BvcCgnTENMJykKCiAgICBkZWYgZnVuY2RlZihzZWxmLCB0cmVlKToKICAgICAgICBbZnVuY25hbWUsIHBhcmFtcywgZ2xvYmFscywgc3RhdGVtZW50c10gPSB0cmVlLmNoaWxkcmVuCgogICAgICAgICMg4LiV4Lij4Lin4LiI4Liq4Lit4Lia4Lin4LmI4Liy4LiK4Li34LmI4Lit4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4LiL4LmJ4Liz4LiB4Lix4Lia4LiX4Li14LmI4LmA4LiE4Lii4LiZ4Li04Lii4Liy4Lih4Lih4Liy4LmB4Lil4LmJ4Lin4Lir4Lij4Li34Lit4LmE4Lih4LmICiAgICAgICAgIyDguKvguLLguIHguJ7guJrguKfguYjguLLguIvguYnguLPguYPguKvguYnguKrguLHguYjguIcgcmFpc2UgSm95TXVsdGlwbHlEZWZpbmVkRnVuY3Rpb25FeGNlcHRpb24oKQogICAgICAgICMgKioqIOC5g+C4quC5iOC5guC4hOC5ieC4lOC4guC4reC4h+C4leC4meC5gOC4reC4hyAqKioKICAgICAgICBpZiBmdW5jbmFtZS52YWx1ZSBpbiBzZWxmLl9mdW5jczoKICAgICAgICAgICAgcmFpc2UgSm95TXVsdGlwbHlEZWZpbmVkRnVuY3Rpb25FeGNlcHRpb24oKQoKICAgICAgICAjIOC4leC4seC5ieC4hyBfc2NvcGUg4LmD4Lir4LmJ4LmA4Lib4LmH4LiZ4LiK4Li34LmI4Lit4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZCiAgICAgICAgc2VsZi5fc2NvcGUgPSBmdW5jbmFtZS52YWx1ZQoKICAgICAgICAjIOC5gOC4geC5h+C4muC4o+C4suC4ouC4iuC4t+C5iOC4reC4leC4seC4p+C5geC4m+C4o+C5guC4geC4peC4muC4reC4peC4peC4h+C5g+C4meC5gOC4i+C5h+C4lSBfZ2xvYmFsIOC4l+C4teC5iOC4meC4tOC4ouC4suC4oeC5hOC4p+C5ieC5g+C4mSDigItKb3kgMi4xCiAgICAgICAgZm9yIGcgaW4gZ2xvYmFscy5jaGlsZHJlbjoKICAgICAgICAgICAgc2VsZi5fZ2xvYmFscy5hZGQoZy52YWx1ZSkKCiAgICAgICAgIyDguJrguLHguJnguJfguLXguIHguILguYnguK3guKHguLnguKXguYDguIHguLXguYjguKLguKfguIHguLHguJrguJ/guLHguIfguIHguYzguIrguLHguJkg4LmA4Lie4Li34LmI4Lit4LmD4LiK4LmJ4LiV4Lij4Lin4LiI4Liq4Lit4Lia4LmD4LiZ4Lig4Liy4Lii4Lir4Lil4Lix4LiHIOC5gOC4iuC5iOC4mSDguIrguLfguYjguK3guJ/guLHguIfguIHguYzguIrguLHguJkg4LiI4Liz4LiZ4Lin4LiZ4Lie4Liy4Lij4Liy4Lih4Li04LmA4LiV4Lit4Lij4LmMIOC4r+C4peC4rwogICAgICAgICMgKioqIOC5g+C4quC5iOC5guC4hOC5ieC4lOC4guC4reC4h+C4leC4meC5gOC4reC4hyAqKioKICAgICAgICBzZWxmLl9mdW5jc1tmdW5jbmFtZS52YWx1ZV0gPSB7CiAgICAgICAgICAgICdwYXJhbXMnOiBbYy52YWx1ZSBmb3IgYyBpbiBwYXJhbXMuY2hpbGRyZW5dLAogICAgICAgIH0KCiAgICAgICAgIyDguKrguKPguYnguLLguIfguYLguITguYnguJTguYPguKvguYnguIHguKPguLDguYLguJTguJTguILguYnguLLguKHguJ/guLHguIfguIHguYzguIrguLHguJnguJrguK3guJTguLXguYnguYTguJvguKLguLHguIfguJfguYnguLLguKLguJ/guLHguIfguIHguYzguIrguLHguJkKICAgICAgICAjICjguYDguJ7guLfguYjguK3guJvguYnguK3guIfguIHguLHguJnguYTguKHguYjguYPguKvguYnguJ/guLHguIfguIHguYzguIrguLHguJnguJfguLPguIfguLLguJnguKPguLDguKvguKfguYjguLLguIfguIHguLLguKPguJnguLTguKLguLLguKEpCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIHNlbGYuX2FzbS5hcHBlbmQoZicnJwogICAgICAgICAgICAvLyAjIyMgZGVmIHtmdW5jbmFtZX0gIyMjCiAgICAgICAgICAgIEAuZW5kZnVuYy57ZnVuY25hbWV9CiAgICAgICAgICAgIDA7Sk1QCiAgICAgICAgJycnKQoKICAgICAgICAjIOC4p+C4suC4h+C4peC4suC5gOC4muC4peC4o+C4sOC4muC4uOC4iOC4uOC4lOC5gOC4o+C4tOC5iOC4oeC4leC5ieC4meC4guC4reC4h+C4n+C4seC4h+C4geC5jOC4iuC4seC4meC5gOC4nuC4t+C5iOC4reC5g+C4q+C5ieC4nOC4ueC5ieC5gOC4o+C4teC4ouC4geC4geC4o+C4sOC5guC4lOC4lOC4oeC4suC4l+C4teC5iOC4iOC4uOC4lOC4meC4teC5ieC5gOC4oeC4t+C5iOC4reC4nuC4muC4hOC4s+C4quC4seC5iOC4h+C5gOC4o+C4teC4ouC4geC4n+C4seC4h+C4geC5jOC4iuC4seC4mQogICAgICAgICMgKOC4o+C4sOC4p+C4seC4h+C4reC4ouC5iOC4suC5g+C4q+C5ieC4iuC4t+C5iOC4reC4peC4suC5gOC4muC4peC4i+C5ieC4sykKICAgICAgICAjICoqKiDguYPguKrguYjguYLguITguYnguJTguILguK3guIfguJXguJnguYDguK3guIcgKioqCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgICguYmVnaW5mdW5jLntmdW5jbmFtZX0pCiAgICAgICAgJycnKQoKICAgICAgICAjIOC4quC4o+C5ieC4suC4h+C5guC4hOC5ieC4lOC4quC4s+C4q+C4o+C4seC4muC4muC4reC4lOC4teC5ieC4guC4reC4h+C4n+C4seC4h+C4geC5jOC4iuC4seC4mSAo4Lit4Lii4Li54LmI4LmD4LiZ4LiV4Lix4Lin4LmB4Lib4LijIHN0YXRlbWVudHMg4LiX4Li14LmI4LiU4Li24LiH4Lih4Liy4LiI4Liy4LiBIHBhcnNlIHRyZWUpCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIHNlbGYudmlzaXQoc3RhdGVtZW50cykKCiAgICAgICAgIyDguKfguLLguIfguKXguLLguYDguJrguKXguYDguJ7guLfguYjguK3guYPguIrguYnguYDguJvguYfguJnguIjguLjguJTguIHguKPguLDguYLguJTguJTguK3guK3guIHguIjguLLguIHguJ/guLHguIfguIHguYzguIrguLHguJkKICAgICAgICAjICoqKiDguYPguKrguYjguYLguITguYnguJTguILguK3guIfguJXguJnguYDguK3guIcgKioqCiAgICAgICAgc2VsZi5fYXNtLmFwcGVuZChmJycnCiAgICAgICAgICAgICguZXhpdGZ1bmMue2Z1bmNuYW1lfSkKICAgICAgICAnJycpCgogICAgICAgICMg4Liq4Lij4LmJ4Liy4LiH4LmC4LiE4LmJ4LiU4LiB4Lij4Liw4LmC4LiU4LiU4LiB4Lil4Lix4Lia4LmE4Lib4Lii4Lix4LiH4Lic4Li54LmJ4LmA4Lij4Li14Lii4LiBIOC5guC4lOC4ouC4lOC4tuC4hyByZXR1cm4gYWRkcmVzcyDguIjguLLguIEgTENMCiAgICAgICAgIyAqKiog4LmD4Liq4LmI4LmC4LiE4LmJ4LiU4LiC4Lit4LiH4LiV4LiZ4LmA4Lit4LiHICoqKgogICAgICAgIHNlbGYuX2FzbS'
destiny = '5upUOyozDbMvpaWjbtVPNtVPNtVPNtVPONGRAZPvNtVPNtVPNtVPNtVRR9GDbtVPNtVPNtVPNtVPNjB0cAHNbtVPNtVPNtVPpaWlxXPvNtVPNtVPNtVlQthXsthYYthVsthXKthYYthLQthWethXKthWithYGthWGthWsthLathYYthXYthW/thYUthVsthVUthLmthVethYUthWathLQthW7thYsthLwthX3thLCthVethLathLQthWithLsthWathVwthYwthWGthVUthXCthYQthLYthWGthWGthVYthLathYYthXUthW/thYUthVsthVUthLmthVethYUthWathWethX3thWGthYKthLathXCthYQthXithXsthLwthYYthVsthVUthYYthXCthWathYGthXYthYYthXUthW/thYUthVsthVUthLmthVethYUthWxXVPNtVPNtVPNwVPbdXvQthLCthXethLwthLYthVGthLathWGthVYthX3thVsthWKthWathLQthX3thVptXvbdPvNtVPNtVPNtp2IfMv5sLKAgYzSjpTIhMPuzWlpaPvNtVPNtVPNtVPNtVPthMJ5xMaIhLl57MaIhL25uoJI9XDbtVPNtVPNtVPpaWlxXPvNtVPNtVPNtVlQthVUthYCthXithWathWDtK3Awo3OyVBP5t+P4d+P5vrP5tBP4z+P5u+P4zrP5thP4trP4crP4zhP4erP4crP4yBP4frP4u+P5tBP4yBP4gBP4bFQthLUthXKthYQthXKthLathYYthVsthXCthYYthXYthVUthYYthXCthWKthYUthXsthLUthWithXCthLYthVUthXKthWethX3thXKthX3thX3thVUthVwthYYthVUthLQthVithLsthWHtK2qfo2WuoUZXVPNtVPNtVPOmMJkzYy9mL29jMFN9VR5iozHXVPNtVPNtVPOmMJkzYy9aoT9vLJkmYzAfMJSlXPxXPvNtVPOxMJLtp3EgqS9lMKE1pz4bp2IfMvjtqUWyMFx6PvNtVPNtVPNtVlQthWKthXCthXsthVwthXethX3thWethXsthLwthYYthX3thXYthYathLwthLCthWathXethLYthVGthWithVYthX3thVsthW/thYUthVsthVUthLmthVethYUthWathXithXCthYsthX3thLGthXUthLtt4Yve4Yvl4YvO4YzN4Yvo4YzU4YvM4YzP4YvO4Yvy4Yvn4Yvg4Yvy4Yvd4YzP4YvR4YvoVPusp2AipTHt4YzN4Yvo4YzU4YvMVR5iozHcPvNtVPNtVPNtVlQthLCthXithLathXethYUthLwthVptpzScp2HtFz95HzI0qKWhG3I0p2yxMHM1ozA0nJ9hEKuwMKO0nJ9hXPxXVPNtVPNtVPOcMvOmMJkzYy9mL29jMFN9CFOBo25yBtbtVPNtVPNtVPNtVPOlLJymMFOXo3yFMKE1pz5CqKEmnJEyEaIhL3Eco25SrTAypUEco24bXDbXVPNtVPNtVPNwVBP4dhP4b+P5vrP4fhP4u+P5thP4uBP5vrP4yBP4z+P4b+P4fBP4brP4c+P4crP4aBP4crP4uBP5vBP4fvOyrUOlVBP4v+P4ghP5vBP4u+P4aBP4crP4crP4frP4ahP4zBP5wBP4vBP4fBP4yrP5vrP4erP4u+P4erP4bhP4hrP5vBP5t+P4zrP4b+P4grP4vBP4grP4dhP5tBP4yrP4erP4b+P5wPOHFRyGVBP4yrP4fhP4brP4y+P4grP5vBP4yrP5vrP4erP4u+P4trP4fhP4b+P4erP4bhP4hrP5vBP5trP4crP5vrP4cjbtVPNtVPNtVPZtXvbdVBP5t+P4dhP5vBP5thP4uBP5vrP4yBP4thP4erP4u+P4yrP4zrP5tBP4erP4ulNdXvbXVPNtVPNtVPOoMKujpy0tCFO0pzIyYzAbnJkxpzIhPvNtVPNtVPNtp2IfMv52nKAcqPuyrUOlXDbXVPNtVPNtVPNwVBP4dhP4b+P5vrP4fhP4u+P5thP4uBP5vrP4yBP4trP4b+P4fBP5thP4yBP4yBP5uBP4z+P4bhP4frP4u+P4crP4fhP5tBP4zhP4crP4y+P4grP5vBP5tBP4yrP4b+P4grP4bhP4brP4erP4erP4trP4vBP4fhP4trP4a+P4frP4u+P4trP5wBP4vhP4frP4zDbtVPNtVPNtVPZtXvbdVBP5t+P4dhP5vBP5thP4uBP5vrP4yBP4thP4erP4u+P4yrP4zrP5tBP4erP4ulNdXvbXVPNtVPNtVPOmMJkzYy9up20hLKOjMJ5xXTLaWlpXVPNtVPNtVPNtVPNtDP5yrTy0MaIhLl57p2IfMv5sp2AipTI9PvNtVPNtVPNtVPNtVQN7Fx1DPvNtVPNtVPNtWlpaXDbXVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwLNcwoTSmplOHMKA0Fz95ZwVbITImqRcirGVkXGbXPvNtVPOXG1ysD09AHRyZEIVtCFOXo3xlZtbXVPNtVTEyMvO0MKA0K2M1ozAsoz9sLKWaK25iK2kiL2SfXUAyoTLcBtbtVPNtVPNtVUAyoTLhL29gpTyfMI9uozEspaIhXPpaWjbtVPNtVPNtVPNtVPOxMJLtMaIhLmRbXFO7PvNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tZGVmAQfXVPNtVPNtVPNtVPNtsDbtVPNtVPNtVPNtVPOfMKDtXwRjVQ0tMaIhLmRbXGfXVPNtVPNtVPNaWlpcPvNtVPNtVPNtp2IfMv5up3AypaESpKIuoPumMJkzYzAjqF5lLJ1oZGOqYPNkZwZ0XDbtVPNtVPNtVUAyoTLhLKAmMKW0EKS1LJjbp2IfMv5wpUHhpzSgJmOqYPNjrQAzMzLcPtbtVPNtMTIzVUEyp3EsMaIhL19ho19upzpbp2IfMvx6PvNtVPNtVPNtp2IfMv5wo21jnJkyK2ShMS9lqJ4bWlpaPvNtVPNtVPNtVPNtVTEyMvOzqJ5wZFtcVUfXVPNtVPNtVPNtVPNtVPNtVTkyqPOuVQ0tZwfXVPNtVPNtVPNtVPNtVPNtVUWyqUIlovNmBjbtVPNtVPNtVPNtVPO9PvNtVPNtVPNtVPNtVTkyqPOuVQ0tZGfXVPNtVPNtVPNtVPNtMaIhLmRbXGfXVPNtVPNtVPNtVPNtoTI0VPbkZPN9VTR7PvNtVPNtVPNtWlpaXDbtVPNtVPNtVUAyoTLhLKAmMKW0EKS1LJjbp2IfMv5wpUHhpzSgJmRjKFjtZFxXVPNtVPNtVPOmMJkzYzSmp2IlqRIkqJSfXUAyoTLhL3O1YaWuoIfjKFjtZUtmMzMzXDbXVPNtVTEyMvO0MKA0K2M1ozAsLKWaplumMJkzXGbXVPNtVPNtVPOmMJkzYzAioKOcoTIsLJ5xK3W1ovtaWlpXVPNtVPNtVPNtVPNtMTIzVTM1ozZkXTRfVTVcVUfXVPNtVPNtVPNtVPNtVPNtVUWyqUIlovOuX2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LtqTImqS9jLKWuoI9gnKAgLKEwnPumMJkzXGbXVPNtVPNtVPO3nKEbVUAyoTLhLKAmMKW0HzScp2ImXRcirIOupzSgGJymoJS0L2uSrTAypUEco24cBtbtVPNtVPNtVPNtVPOmMJkzYzAioKOcoTIsLJ5xK3W1ovtaWlpXVPNtVPNtVPNtVPNtVPNtVTEyMvOzqJ5wZFuuYPOvXFO7PvNtVPNtVPNtVPNtVPNtVPNtVPNtpzI0qKWhVTReLwfXVPNtVPNtVPNtVPNtVPNtVU0XVPNtVPNtVPNtVPNtVPNtVTkyqPOuVQ0tMaIhLmRbXGfXVPNtVPNtVPNtVPNtWlpaXDbXVPNtVTEyMvO0MKA0K211oUEcpTk5K2EyMzyhMJDbp2IfMvx6PvNtVPNtVPNtq2y0nPOmMJkzYzSmp2IlqSWunKAypluXo3yAqJk0nKOfrHEyMzyhMJETqJ5wqTyioxI4L2IjqTyiovx6PvNtVPNtVPNtVPNtVUAyoTLhL29gpTyfMI9uozEspaIhXPpaWjbtVPNtVPNtVPNtVPNtVPNtMTIzVTM1ozZkXTRfVTVcVUfXVPNtVPNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tLFgvBjbtVPNtVPNtVPNtVPNtVPNtsDbtVPNtVPNtVPNtVPNtVPNtMTIzVTM1ozZkXPxtrjbtVPNtVPNtVPNtVPNtVPNtVPNtVUWyqUIlovNmBjbtVPNtVPNtVPNtVPNtVPNtsDbtVPNtVPNtVPNtVPNtVPNtoTI0VTRtCFOzqJ5wZFtcBjbtVPNtVPNtVPNtVPNaWlpcPtbtVPNtMTIzVUEyp3EspzI0qKWhK291qUAcMTIsMaIhLlumMJkzXGbXVPNtVPNtVPO3nKEbVUAyoTLhLKAmMKW0HzScp2ImXRcirH11oUEcpTk5ETIznJ5yMRM1ozA0nJ9hEKuwMKO0nJ9hXGbXVPNtVPNtVPNtVPNtp2IfMv5wo21jnJkyK2ShMS9lqJ4bWlpaPvNtVPNtVPNtVPNtVPNtVPOxMJLtMaIhLmRbLFjtLvxtrjbtVPNtVPNtVPNtVPNtVPNtVPNtVUWyqUIlovOuX2V7PvNtVPNtVPNtVPNtVPNtVPO9PvNtVPNtVPNtVPNtVPNtVPOxMJLtMaIhLmRbXFO7PvNtVPNtVPNtVPNtVPNtVPNtVPNtpzI0qKWhVQZ7PvNtVPNtVPNtVPNtVPNtVPO9PvNtVPNtVPNtVPNtVPNtVPOfMKDtLFN9VTM1ozZkXPx7PvNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tZQfXVPNtVPNtVPNtVPNtWlpaXDbXVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwLNcwoTSmplOXo3xlZluXo3xlZvx6PtbtVPNtVlQthWithXCthYUthWethWithXCthYwthVsthLUthVUthXCthXUthXUthYYthXCthLmthVwthYYthVRtFz95VQVhZvQthLYthWGthXYthLQthW7thYGthLwthXUthVUthV7thXethYCthXithXCthYUthWethWathYGthW7thVwthWathLjtXvjtYljtWFQthWKthYYthXUthWsthYKthLwthX3thWwthYGthWethYYthXYthLGthXsthLathVYthLathYYthVsthWKthLathWathLCthXithLathLQthXCthYKthXYthWethXCthLathX3thXVXVPNtVPZtXvbdVBP5t+P4dhP5vBP5thP4uBP5vrP4yBP4thP4erP4u+P4yrP4zrP5tBP4erP4ulNdXvbXVPNtVRqFDH1ADIVtCFOlWlpaPvNtVPNtVPNtpUWiM3WuoGbtXTM1ozAxMJLtsPOmqTS0MJ1yoaDcXtbtVPNtVPNtVTM1ozAxMJL6VPWxMJLvVRyRVPVbVvOjLKWuoKZtVvxvVPW7VvOaoT9vLJkmVUA0LKEyoJIhqUZtVa0vPvNtVPNtVPNtpTSlLJ1mBvOWEPNbVvjvVRyRXFbXVPNtVPNtVPNtVPNtsNbtVPNtVPNtVTqfo2WuoUZ6VPtvM2kiLzSfVvOWEPNvBlVcXtbtVPNtVPNtVUA0LKEyoJIhqUZ6VUA0LKEyoJIhqPbXVPNtVPNtVPOmqTS0MJ1yoaD6VUA0oKEsLKAmnJqhPvNtVPNtVPNtVPNtVPNtVPNtsPOmqT10K2yzPvNtVPNtVPNtVPNtVPNtVPNtsPOmqT10K2yzK2Ifp2HXVPNtVPNtVPNtVPNtVPNtVPO8VUA0oKEsq2ucoTHXVPNtVPNtVPNtVPNtVPNtVPO8VUA0oKEsqJ50nJjXVPNtVPNtVPNtVPNtVPNtVPO8VUA0oKEsLKAmnJqhK2EypzIzPvNtVPNtVPNtVPNtVPNtVPNtsPOmqT10K2AuoTjXVPNtVPNtVPNtVPNtVPNtVPO8VUA0oKEspzI0qKWhPvNtVPNtVPNtp3EgqS9up3AcM246VPWfMKDvVRyRVPV9VvOyrUOlVPV7VtbtVPNtVPNtVUA0oKEsnJL6VPWcMvVtMKujpvNvrlVtp3EuqTIgMJ50plNvsFVXVPNtVPNtVPOmqT10K2yzK2Ifp2H6VPWcMvVtMKujpvNvrlVtp3EuqTIgMJ50plNvsFVtVzIfp2HvVPW7VvOmqTS0MJ1yoaEmVPW9VtbtVPNtVPNtVUA0oKEsq2ucoTH6VPW3nTyfMFVtMKujpvNvrlVtp3EuqTIgMJ50plNvsFVXVPNtVPNtVPOmqT10K3IhqTyfBvNvqJ50nJjvVTI4pUVtVafvVUA0LKEyoJIhqUZtVa0vPvNtVPNtVPNtp3EgqS9up3AcM25sMTIlMJL6VPWfMKDvVPVdVvOyrUOlVPV9VvOyrUOlVPV7VtbtVPNtVPNtVUA0oKEsL2SfoQbtMKujpy9wLJkfVPV7VtbtVPNtVPNtVUA0oKEspzI0qKWhBvNvpzI0qKWhVvOyrUOlVPV7VtbtVPNtVPNtVTI4pUV6VTI4pUWsL29hp3DXVPNtVPNtVPNtVPNtsPOyrUOlK2yxPvNtVPNtVPNtVPNtVUjtMKujpy9uMTDXVPNtVPNtVPNtVPNtsPOyrUOlK3A1LtbtVPNtVPNtVPNtVPO8VTI4pUWsozIaLKEyPvNtVPNtVPNtVPNtVUjtMKujpy9jLKWyotbtVPNtVPNtVPNtVPO8VTI4pUWsL29gpTSlMDbtVPNtVPNtVPNtVPO8VTI4pUWsLJ5xPvNtVPNtVPNtVPNtVUjtMKujpy9iptbtVPNtVPNtVPNtVPO8VTI4pUWsoz90PvNtVPNtVPNtVPNtVUjtMKujpy9lMJLXVPNtVPNtVPNtVPNtsPOyrUOlK2EypzIzPvNtVPNtVPNtVPNtVUjtMKujpy9mqUWcozpXVPNtVPNtVPNtVPNtsPOyrUOlK2SlpzS5PvNtVPNtVPNtVPNtVUjtMKujpy9wLJkfPvNtVPNtVPNtVPNtVUjtMKujpy9gqJkxnKLXVPNtVPNtVPOyrUOlK2SxMQbtMKujpvNvXlVtMK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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))